name: Deploy Lambda Layer

on:
  push:
    branches:
      - lambda  # Change to the appropriate branch

on:
  workflow_dispatch:
    inputs:
      layer_name:
        description: 'Name of the Layer'
      description:
        description: 'Description of what the layer does'
      path_to_req:
        description: 'Path to the requirements.txt file that layer uses'
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        run: |
          docker build --build-arg REQUIREMENTS_PATH=${{ github.event.inputs.path_to_req }} --build-arg LAYER_NAME=${{ github.event.inputs.layer_name }} -t lambda-layer .
          docker run --name lambda-layer-container -v ${{ github.workspace }}:/app lambda-layer
          docker cp lambda-layer-container:/app/requests-layer.zip .
          docker stop lambda-layer-container
          docker rm lambda-layer-container
          docker rmi --force lambda-layer
        working-directory: ${{ github.workspace }}

      - name: Create AWS Lambda Layer
        run: |
          aws lambda publish-layer-version \
            --layer-name ${{ github.event.inputs.layer_name }} \
            --description ${{ github.event.inputs.description }}" \
            --compatible-runtimes python3.8 \
            --license-info "MIT" \
            --zip-file fileb://${{ github.event.inputs.layer_name }}.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_EC2_METADATA_DISABLED: true
          AWS_DEFAULT_REGION: us-east-1

      - name: Cleanup
        run: |
          rm ${{ github.event.inputs.layer_name }}.zip
        working-directory: ${{ github.workspace }}
